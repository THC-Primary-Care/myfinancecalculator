-- SQL script for setting up Supabase tables for PCN Calculator

-- Create a table to store calculator data associated with users
CREATE TABLE pcn_calculator_data (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES auth.users ON DELETE CASCADE,
    staff_list TEXT DEFAULT '[]',
    monthly_prefs TEXT DEFAULT '{}',
    financial_data TEXT DEFAULT '{}',
    forecast_scenarios TEXT DEFAULT '[]',
    last_updated TIMESTAMPTZ DEFAULT NOW(),
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create index on user_id for faster lookups
CREATE INDEX idx_pcn_calculator_data_user_id ON pcn_calculator_data(user_id);

-- Set up Row Level Security (RLS) policies
-- Enable RLS on the table
ALTER TABLE pcn_calculator_data ENABLE ROW LEVEL SECURITY;

-- Create policy to allow users to select their own data
CREATE POLICY select_own_data ON pcn_calculator_data 
    FOR SELECT USING (auth.uid() = user_id);

-- Create policy to allow users to insert their own data
CREATE POLICY insert_own_data ON pcn_calculator_data 
    FOR INSERT WITH CHECK (auth.uid() = user_id);

-- Create policy to allow users to update their own data
CREATE POLICY update_own_data ON pcn_calculator_data 
    FOR UPDATE USING (auth.uid() = user_id);

-- Create policy to allow users to delete their own data
CREATE POLICY delete_own_data ON pcn_calculator_data 
    FOR DELETE USING (auth.uid() = user_id);

-- Create a function to initialize user data on signup
CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO public.pcn_calculator_data (user_id, staff_list, monthly_prefs, financial_data)
    VALUES (new.id, '[]', '{}', '{}');
    RETURN new;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Create a trigger to call the function when a new user signs up
CREATE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE PROCEDURE public.handle_new_user();

-- IMPORTANT: Run the following commands in the Supabase SQL Editor

-- Instructions for setting up Supabase:
-- 1. Create a new Supabase project at https://supabase.com/
-- 2. Go to SQL Editor and run this script
-- 3. In Authentication settings, enable Email/Password sign-up
-- 4. Configure your app with the URL and anon key from Supabase dashboard
-- 5. Update the constants at the top of the pcn_calculator.html file:
--    SUPABASE_URL = 'your-project-url'
--    SUPABASE_ANON_KEY = 'your-anon-key'

-- Add unique constraint on user_id
ALTER TABLE pcn_calculator_data ADD CONSTRAINT unique_user_id UNIQUE (user_id); 